// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jobapi.proto

/*
Package jobapi is a generated protocol buffer package.

It is generated from these files:
	jobapi.proto

It has these top-level messages:
	WorkflowStartRequest
	WorkflowStartResponse
	TaskOutputRecordRequest
	TaskOutputRecordResponse
*/
package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorkflowStartRequest struct {
	WorkflowId uint64 `protobuf:"varint,1,opt,name=workflow_id,json=workflowId" json:"workflow_id,omitempty"`
	ExecName   string `protobuf:"bytes,2,opt,name=exec_name,json=execName" json:"exec_name,omitempty"`
	Input      []byte `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (m *WorkflowStartRequest) Reset()                    { *m = WorkflowStartRequest{} }
func (m *WorkflowStartRequest) String() string            { return proto.CompactTextString(m) }
func (*WorkflowStartRequest) ProtoMessage()               {}
func (*WorkflowStartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WorkflowStartRequest) GetWorkflowId() uint64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

func (m *WorkflowStartRequest) GetExecName() string {
	if m != nil {
		return m.ExecName
	}
	return ""
}

func (m *WorkflowStartRequest) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

type WorkflowStartResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *WorkflowStartResponse) Reset()                    { *m = WorkflowStartResponse{} }
func (m *WorkflowStartResponse) String() string            { return proto.CompactTextString(m) }
func (*WorkflowStartResponse) ProtoMessage()               {}
func (*WorkflowStartResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WorkflowStartResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type TaskOutputRecordRequest struct {
	TaskId uint64 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *TaskOutputRecordRequest) Reset()                    { *m = TaskOutputRecordRequest{} }
func (m *TaskOutputRecordRequest) String() string            { return proto.CompactTextString(m) }
func (*TaskOutputRecordRequest) ProtoMessage()               {}
func (*TaskOutputRecordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TaskOutputRecordRequest) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *TaskOutputRecordRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TaskOutputRecordResponse struct {
	TaskId uint64 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
}

func (m *TaskOutputRecordResponse) Reset()                    { *m = TaskOutputRecordResponse{} }
func (m *TaskOutputRecordResponse) String() string            { return proto.CompactTextString(m) }
func (*TaskOutputRecordResponse) ProtoMessage()               {}
func (*TaskOutputRecordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TaskOutputRecordResponse) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func init() {
	proto.RegisterType((*WorkflowStartRequest)(nil), "jobapi.WorkflowStartRequest")
	proto.RegisterType((*WorkflowStartResponse)(nil), "jobapi.WorkflowStartResponse")
	proto.RegisterType((*TaskOutputRecordRequest)(nil), "jobapi.TaskOutputRecordRequest")
	proto.RegisterType((*TaskOutputRecordResponse)(nil), "jobapi.TaskOutputRecordResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Jobapi service

type JobapiClient interface {
	StartWorkflow(ctx context.Context, in *WorkflowStartRequest, opts ...grpc.CallOption) (*WorkflowStartResponse, error)
	RecordTaskOutput(ctx context.Context, in *TaskOutputRecordRequest, opts ...grpc.CallOption) (*TaskOutputRecordResponse, error)
}

type jobapiClient struct {
	cc *grpc.ClientConn
}

func NewJobapiClient(cc *grpc.ClientConn) JobapiClient {
	return &jobapiClient{cc}
}

func (c *jobapiClient) StartWorkflow(ctx context.Context, in *WorkflowStartRequest, opts ...grpc.CallOption) (*WorkflowStartResponse, error) {
	out := new(WorkflowStartResponse)
	err := grpc.Invoke(ctx, "/jobapi.Jobapi/StartWorkflow", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobapiClient) RecordTaskOutput(ctx context.Context, in *TaskOutputRecordRequest, opts ...grpc.CallOption) (*TaskOutputRecordResponse, error) {
	out := new(TaskOutputRecordResponse)
	err := grpc.Invoke(ctx, "/jobapi.Jobapi/RecordTaskOutput", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Jobapi service

type JobapiServer interface {
	StartWorkflow(context.Context, *WorkflowStartRequest) (*WorkflowStartResponse, error)
	RecordTaskOutput(context.Context, *TaskOutputRecordRequest) (*TaskOutputRecordResponse, error)
}

func RegisterJobapiServer(s *grpc.Server, srv JobapiServer) {
	s.RegisterService(&_Jobapi_serviceDesc, srv)
}

func _Jobapi_StartWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobapiServer).StartWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobapi.Jobapi/StartWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobapiServer).StartWorkflow(ctx, req.(*WorkflowStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobapi_RecordTaskOutput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskOutputRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobapiServer).RecordTaskOutput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobapi.Jobapi/RecordTaskOutput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobapiServer).RecordTaskOutput(ctx, req.(*TaskOutputRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jobapi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jobapi.Jobapi",
	HandlerType: (*JobapiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartWorkflow",
			Handler:    _Jobapi_StartWorkflow_Handler,
		},
		{
			MethodName: "RecordTaskOutput",
			Handler:    _Jobapi_RecordTaskOutput_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jobapi.proto",
}

func init() { proto.RegisterFile("jobapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0x49, 0x9d, 0xd5, 0x5d, 0xab, 0xc8, 0x65, 0xb2, 0x32, 0x95, 0x95, 0xbe, 0xd8, 0xa7,
	0x3d, 0xb8, 0xff, 0x20, 0x4c, 0x44, 0x21, 0x2a, 0x3e, 0x8e, 0x6c, 0x89, 0xd0, 0xd5, 0x35, 0xb1,
	0xb9, 0x65, 0xfe, 0x29, 0xff, 0xa3, 0x2c, 0x6d, 0x1d, 0xe8, 0xf2, 0x96, 0x7b, 0x92, 0x9c, 0xf3,
	0xe5, 0x04, 0xa2, 0x95, 0x5e, 0x08, 0x93, 0x4f, 0x4c, 0xa5, 0x49, 0x63, 0xd8, 0x4c, 0xe9, 0x0a,
	0x06, 0x6f, 0xba, 0x2a, 0xde, 0x3f, 0xf4, 0xe6, 0x99, 0x44, 0x45, 0x5c, 0x7d, 0xd6, 0xca, 0x12,
	0x8e, 0xe1, 0x64, 0xd3, 0xea, 0xf3, 0x5c, 0xc6, 0x2c, 0x61, 0x59, 0x8f, 0x43, 0x27, 0xcd, 0x24,
	0x5e, 0x42, 0x5f, 0x7d, 0xa9, 0xe5, 0xbc, 0x14, 0x6b, 0x15, 0x07, 0x09, 0xcb, 0xfa, 0xfc, 0x78,
	0x2b, 0x3c, 0x8a, 0xb5, 0xc2, 0x01, 0x1c, 0xe6, 0xa5, 0xa9, 0x29, 0x3e, 0x48, 0x58, 0x16, 0xf1,
	0x66, 0x48, 0x6f, 0xe0, 0xe2, 0x4f, 0x96, 0x35, 0xba, 0xb4, 0x0a, 0xcf, 0x20, 0xf8, 0xcd, 0x08,
	0x72, 0x99, 0xde, 0xc1, 0xf0, 0x45, 0xd8, 0xe2, 0xa9, 0x26, 0x53, 0x13, 0x57, 0x4b, 0x5d, 0xc9,
	0x8e, 0x6b, 0x08, 0x47, 0x24, 0x6c, 0xb1, 0x63, 0x0a, 0xb7, 0xe3, 0x4c, 0x22, 0x42, 0x4f, 0x0a,
	0x12, 0x0e, 0x25, 0xe2, 0x6e, 0x9d, 0x4e, 0x21, 0xfe, 0xef, 0xd3, 0x66, 0xfa, 0x8c, 0x6e, 0xbf,
	0x19, 0x84, 0xf7, 0xae, 0x1c, 0x7c, 0x80, 0x53, 0x07, 0xda, 0x51, 0xe3, 0xd5, 0xa4, 0x2d, 0x71,
	0x5f, 0x67, 0xa3, 0x6b, 0xcf, 0x6e, 0x9b, 0xf8, 0x0a, 0xe7, 0x0d, 0xc3, 0x8e, 0x09, 0xc7, 0xdd,
	0x15, 0xcf, 0x7b, 0x47, 0x89, 0xff, 0x40, 0x63, 0xbb, 0x08, 0xdd, 0x87, 0x4e, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xeb, 0x8f, 0x49, 0xe2, 0xe0, 0x01, 0x00, 0x00,
}
